using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BankAdmin
{
    using System;
    using System.Collections.Generic;

    class Customer
    {
        private static int accountNumberCounter = 100000000;
        private static Random random = new Random();

        public int AccountNumber { get; set; }
        public string CustomerName { get; set; }
        public string AccountType { get; set; }
        public double Balance { get; set; }
        public double MinimumBalance { get; set; }
        public string MobileNumber { get; set; }
        public string EmailId { get; set; }
        public int ATM_Pin { get; set; }

        public string PANNumber { get; set; }

        public Customer(string customerName, string accountType, double balance, double minimumBalance, string mobileNumber, string emailId, string panNumber = "")
        {
            AccountNumber = accountNumberCounter++;
            CustomerName = customerName;
            AccountType = accountType;
            Balance = balance;
            MinimumBalance = minimumBalance;
            MobileNumber = mobileNumber;
            EmailId = emailId;
            ATM_Pin = random.Next(1000, 9999);
            PANNumber = panNumber;
        }
    }

    class Bank
    {
        private List<Customer> customers;

        public Bank()
        {
            customers = new List<Customer>();
        }

        public void AddCustomer(string customerName, string accountType, double balance, double minimumBalance, string mobileNumber, string emailId, string panNumber)
        {
            customers.Add(new Customer(customerName, accountType, balance, minimumBalance, mobileNumber, emailId, panNumber));
            Console.WriteLine("Customer added successfully.");
        }

        public void UpdateCustomerDetails(int accountNumber, string mobileNumber, string emailId)
        {
            Customer customer = customers.Find(c => c.AccountNumber == accountNumber);
            if (customer == null)
            {
                Console.WriteLine("Account number not found.");
                return;
            }

            customer.MobileNumber = mobileNumber;
            customer.EmailId = emailId;
            Console.WriteLine("Customer details updated successfully.");
        }

        public void DeleteCustomer(int accountNumber)
        {
            Customer customer = customers.Find(c => c.AccountNumber == accountNumber);
            if (customer == null)
            {
                Console.WriteLine("Account number not found.");
                return;
            }

            customers.Remove(customer);
            Console.WriteLine("Customer deleted successfully.");
        }

        public void DisplayAllCustomers()
        {
            Console.WriteLine("List of all customers in the bank:");
            foreach (Customer customer in customers)
            {
                Console.WriteLine("Account Number: {0}", customer.AccountNumber);
                Console.WriteLine("Customer Name: {0}", customer.CustomerName);
                Console.WriteLine("Account Type: {0}", customer.AccountType);
                Console.WriteLine("Balance: {0}", customer.Balance);
                Console.WriteLine("Minimum Balance: {0}", customer.MinimumBalance);
                Console.WriteLine("Mobile Number: {0}", customer.MobileNumber);
                Console.WriteLine("Email Id: {0}", customer.EmailId);
                Console.WriteLine("PAN ID: {0}", customer.PANNumber);
                Console.WriteLine("ATM Pin: {0}", customer.ATM_Pin);
                Console.WriteLine();
            }
        }


        class Program
        {
            static void Main(string[] args)
            {
                Bank bank = new Bank();
                int choice;
                do
                {
                    Console.WriteLine("1. Add a new customer");
                    Console.WriteLine("2. Update customer details");
                    Console.WriteLine("3. Delete a customer");
                    Console.WriteLine("4. Display all customers");
                    Console.WriteLine("5. Display customer details of a specific customer");
                    Console.WriteLine("6. Exit");
                    Console.WriteLine("Enter your choice: ");
                    choice = int.Parse(Console.ReadLine());

                    switch (choice)
                    {
                        case 1:
                            Console.WriteLine("Enter customer name: ");
                            string customerName = Console.ReadLine();
                            Console.WriteLine("Enter account type (Savings/Current): ");
                            string accountType = Console.ReadLine();
                            Console.WriteLine("Enter balance: ");
                            double balance = double.Parse(Console.ReadLine());
                            Console.WriteLine("Enter minimum balance: ");
                            double minimumBalance = double.Parse(Console.ReadLine());
                            Console.WriteLine("Enter mobile number: ");
                            string mobileNumber = Console.ReadLine();
                            Console.WriteLine("Enter email id: ");
                            string emailId = Console.ReadLine();
                            Console.WriteLine("Enter PAN No: ");
                            string panNumber = Console.ReadLine();
                            bank.AddCustomer(customerName, accountType, balance, minimumBalance, mobileNumber, emailId, panNumber);
                            break;
                        case 2:
                            Console.WriteLine("Enter account number: ");
                            int accountNumber = int.Parse(Console.ReadLine());
                            Console.WriteLine("Enter new mobile number: ");
                            mobileNumber = Console.ReadLine();
                            Console.WriteLine("Enter new email id: ");
                            emailId = Console.ReadLine();
                            bank.UpdateCustomerDetails(accountNumber, mobileNumber, emailId);
                            break;
                        case 3:
                            Console.WriteLine("Enter account number: ");
                            accountNumber = int.Parse(Console.ReadLine());
                            bank.DeleteCustomer(accountNumber);
                            break;
                        case 4:
                            bank.DisplayAllCustomers();
                            break;
                        case 5:
                            Console.WriteLine("Enter account number: ");
                            accountNumber = int.Parse(Console.ReadLine());
                            Customer customer = bank.customers.Find(c => c.AccountNumber == accountNumber);
                            if (customer == null)
                            {
                                Console.WriteLine("Account number not found.");
                                break;
                            }
                            Console.WriteLine("Account Number: {0}", customer.AccountNumber);
                            Console.WriteLine("Customer Name: {0}", customer.CustomerName);
                            Console.WriteLine("Account Type: {0}", customer.AccountType);
                            Console.WriteLine("Balance: {0}", customer.Balance);
                            Console.WriteLine("Minimum Balance: {0}", customer.MinimumBalance);
                            Console.WriteLine("Mobile Number: {0}", customer.MobileNumber);
                            Console.WriteLine("Email Id: {0}", customer.EmailId);
                            Console.WriteLine("ATM Pin: {0}", customer.ATM_Pin);
                            break;
                        case 6:
                            Console.WriteLine("Exiting the program...");
                            break;
                        default:
                            Console.WriteLine("Invalid choice. Please try again.");
                            break;
                    }
                } while (choice != 6);
                Console.ReadKey();
            }
        }

    }
}
===============================================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BankTransactions
{
    class BankTransactions
    {
        public int balance;
        public string name;
        public int accountNumber;
        public string accType;
        //depositing money
        public void Depositing(int money)
        {
            if (money >= 50000)
            {
                Console.WriteLine("Enter your PAN Card number");
                int PAN = Convert.ToInt32(Console.ReadLine());
                balance = balance + money;
                Console.WriteLine($"Balance after deposit: " + balance);
            }
            else
            {
                balance = balance + money;
                Console.WriteLine($"Balance after deposit: " + balance);
            }
        }
        public void Withdraw(int money)

        {
            
            if (money + 1000 < balance)
            {
                balance = balance - money;
                Console.WriteLine($"Balance after withdraw: " + balance);
            }
            else
            {
                Console.WriteLine("â€œInsufficient funds");
            }
            
            
                if (money + 1000 < balance)
                {
                    balance = balance - money;
                    Console.WriteLine($"Balance after withdraw: " + balance);
                }
                else
                {
                    Console.WriteLine("â€œInsufficient funds");
                }
            
        }
        public void Showbalance()
        {
            Console.WriteLine($"Your current balance is" + balance);
        }
        public void AddNewCustomer(int accountNumber, string name, string accType, int bal)
        {
            this.accountNumber = accountNumber;
            this.name = name;
            this.accType = accType;
            balance = bal;

        }
        public void display()
        {
            Console.WriteLine($"Account nuber" + accountNumber);
            Console.WriteLine($"Customername" + name);
            Console.WriteLine($"Account type" + accType);
            Console.WriteLine($"Available balance" + balance);
        }
       
        public void TransferringMoney()
        {
            Console.WriteLine("Enter Account number ");
            int TAccountNumber = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Enter amount to transfer");
            int Tamount = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Transferred Amount Successfully");

        }

    }
        
    class Program
    {
        static void Main(string[] args)
        {
            BankTransactions bank1 = new BankTransactions();
            bank1.AddNewCustomer(100000000,"farsana", "saving", 10000);
            bank1.display();

          
            int choice;

            do
            {
                Console.WriteLine("PRESS (1).Deposit");
                Console.WriteLine("(2).Withdraw");
                Console.WriteLine("(3).Show balance");
                Console.WriteLine("(4).Transferring Money from One Account to Another account");
                Console.WriteLine("(0).Exit");
                choice = int.Parse(Console.ReadLine());

                switch (choice)
                {
                    case 1:
                       
                        Console.WriteLine("Enter money to deposit");
                        int d = int.Parse(Console.ReadLine());

                        
                        bank1.Depositing(d);
                        break;
                    case 2:
                        bank1.Showbalance();
                        Console.WriteLine("Enter money to Withdraw");
                        int w = int.Parse(Console.ReadLine());
                        bank1.Withdraw(w);
                        break;
                    case 3:
                        bank1.Showbalance();
                        break;
                    case 4:
                        bank1.TransferringMoney();
                        break;
                }

            } while (choice !=0);
            Console.ReadKey();
        }
    }
}